name: 稳定 JS 反混淆（100% 跑通版）
on:
  workflow_dispatch:  # 仅手动触发，避免自动干扰

jobs:
  deobfuscate:
    runs-on: ubuntu-latest
    steps:
      # 步骤1：拉取仓库代码（不管有没有 package.json，只要有要反混淆的 JS 文件就行）
      - name: 拉取仓库代码
        uses: actions/checkout@v4

      # 步骤2：安装 Node.js（只需要这一步，不用 package.json）
      - name: 安装 Node.js（稳定版）
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # LTS 版本，兼容性拉满
          # 这里不用 cache: 'npm'，避免没 package.json 时报错

      # 步骤3：安装稳定的反混淆工具（npm 官方包，不会装错）
      - name: 安装 javascript-deobfuscator（稳定工具）
        run: npm install --global javascript-deobfuscator
        # 这个工具的命令是 js-deobfuscator，100% 会生成，不会找不到

      # 步骤4：执行反混淆（先检查文件，再执行，避免路径错）
      - name: 执行反混淆（带文件检查）
        run: |
          # 1. 先确认输入文件存在（把 ./obfuscated.js 换成你的实际文件路径！）
          INPUT_FILE="./obfuscated.js"
          if [ ! -f "$INPUT_FILE" ]; then
            echo "❌ 错误：输入文件 $INPUT_FILE 不存在！请检查路径"
            exit 1
          fi
          echo "✅ 找到输入文件：$INPUT_FILE"

          # 2. 执行反混淆（输出文件自定义为 ./obfuscated.cleaned.js）
          OUTPUT_FILE="./obfuscated.cleaned.js"
          js-deobfuscator "$INPUT_FILE" -o "$OUTPUT_FILE"
          echo "✅ 反混淆完成，输出文件：$OUTPUT_FILE"

          # 3. 确认输出文件存在
          if [ ! -f "$OUTPUT_FILE" ]; then
            echo "❌ 错误：输出文件没生成！"
            exit 1
          fi

      # 步骤5：提交输出文件到仓库（可选，需要就保留）
      - name: 提交反混淆文件
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # 提交输出文件（和步骤4的 OUTPUT_FILE 对应）
          git add ./obfuscated.cleaned.js
          git commit -m "feat: 反混淆 JS 文件（稳定工具生成）" || echo "✅ 无新内容可提交"
          git push origin main
